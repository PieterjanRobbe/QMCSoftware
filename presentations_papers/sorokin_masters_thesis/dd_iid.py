''' Code '''
from qmcpy import *
from numpy import random
x_u = IIDStdUniform(dimension=2, seed=7).gen_samples(2**7)
x_g = IIDStdGaussian(dimension=2, seed=7).gen_samples(2**7)
ed = CustomIIDDistribution(
    lambda n: random.exponential(scale=2./3, size=(n,2)))
x_e = ed.gen_samples(2**7)
''' Plots '''
from matplotlib import pyplot
pyplot.rc('font', size=11)
pyplot.rc('axes', titlesize=11)
pyplot.rc('axes', labelsize=11)
pyplot.rc('xtick', labelsize=11)
pyplot.rc('ytick', labelsize=11)
pyplot.rc('legend', fontsize=11)
pyplot.rc('figure', titlesize=11)
fig,ax = pyplot.subplots(nrows=1, ncols=3, figsize=(15,5))
ax[0].set_title('IID Standard Uniform')
ax[0].scatter(x_u[:,0],x_u[:,1],color='r')
ax[0].set_xlim([0,1])
ax[0].set_xticks([0,1])
ax[0].set_xlabel('$x_{i1}$')
ax[0].set_ylim([0,1])
ax[0].set_yticks([0,1])
ax[0].set_ylabel('$x_{i2}$')
ax[0].set_aspect(1)
ax[1].set_title('IID Standard Gaussian')
ax[1].scatter(x_g[:,0],x_g[:,1],color='g')
ax[1].set_xlim([-3,3])
ax[1].set_xticks([-3,3])
ax[1].set_xlabel('$x_{i1}$')
ax[1].set_ylim([-3,3])
ax[1].set_yticks([-3,3])
ax[1].set_ylabel('$x_{i2}$')
ax[1].set_aspect(1)
ax[2].set_title('IID Exp($\lambda=$3/2)')
ax[2].scatter(x_e[:,0],x_e[:,1],color='b')
ax[2].set_xlim([0,3])
ax[2].set_xticks([0,3])
ax[2].set_xlabel('$x_{i1}$')
ax[2].set_ylim([0,3])
ax[2].set_yticks([0,3])
ax[2].set_ylabel('$x_{i2}$')
ax[2].set_yticks([0,3])
ax[2].set_aspect(1)
# meta info
pyplot.tight_layout()
pyplot.savefig('presentations_papers/sorokin_masters_thesis/figs/dd_iid.png',dpi=250)
pyplot.show()